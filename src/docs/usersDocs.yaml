
  /users/signup:
    post:
      tags:
        - Users
      summary: Signup a new user (public)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created
        '400':
          description: Bad request

  /users/login:
    post:
      tags:
        - Users
      summary: Login user (public)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: imanariyobaptiste@gmail.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Login successful
        '400':
          description: Login failed

  /users:
    post:
      tags:
        - Users
      summary: Admin creates user (protected)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created
        '401':
          description: Unauthorized
    get:
      tags:
        - Users
      summary: List users (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: List of users
        '401':
          description: Unauthorized

  /users/{id}:
    put:
      tags:
        - Users
      summary: Update user (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: User updated
        '404':
          description: Not found

  /users/{id}/soft:
    delete:
      tags:
        - Users
      summary: Soft delete user (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User soft deleted

  /users/{id}/hard:
    delete:
      tags:
        - Users
      summary: Hard delete user (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User hard deleted

  /users/{id}/restore:
    put:
      tags:
        - Users
      summary: Restore user (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User restored

  /users/{id}/role:
    put:
      tags:
        - Users
      summary: Change user role (admin only)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  example: TECHNICIAN
      responses:
        '200':
          description: Role changed

  /users/change-password:
    put:
      tags:
        - Users
      summary: Change password (authenticated)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Password changed
        '401':
          description: Unauthorized

  /users/request-password-reset:
    post:
      tags:
        - Users
      summary: Request password reset (public)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: OTP sent

  /users/reset-password:
    post:
      tags:
        - Users
      summary: Reset password (public)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                otp:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Password reset successful

  components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    CreateUserRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
